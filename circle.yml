machine:
  environment:
    PATH: $PATH:$HOME/terraform:$HOME/packer:$HOME/glide/linux-amd64
  services:
    - docker

dependencies:
  override:
    # Install the gruntwork-module-circleci-helpers and use it to configure the build environment and run tests.
    - curl -Ls https://raw.githubusercontent.com/gruntwork-io/gruntwork-installer/master/bootstrap-gruntwork-installer.sh | bash /dev/stdin --version v0.0.16
    - gruntwork-install --module-name "gruntwork-module-circleci-helpers" --repo "https://github.com/gruntwork-io/module-ci" --tag "v0.3.18"
    - gruntwork-install --binary-name "docs-generator" --repo "https://github.com/gruntwork-io/module-ci" --tag "v0.3.12"
    - configure-environment-for-gruntwork-module --go-src-path test --go-src-path modules/openvpn-admin --go-version 1.8.3  --terragrunt-version "v0.12.8" --packer-version "1.0.2" --glide-version "0.12.3"
  cache_directories:
    - ~/terraform
    - ~/packer
    - ~/glide

test:
  override:
    - examples/packer/build-binary.sh
    - cd modules/openvpn-admin && ./_ci/build-and-test.sh
    - run-go-tests --path test:
         timeout: 3600

deployment:
  release:
    tag: /v.*/
    commands:
      # Generate the latest public docs for this repo by: cloning the module-XXX-public version of this repo, deleting its original contents, cloning a fresh checkout of this repo, running the docs-generator in it, and committing the changes
      # - git clone "git@github.com:$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME-public.git" "$HOME/$CIRCLE_PROJECT_REPONAME-public"
      # - git clone "git@github.com:$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME.git" "$HOME/$CIRCLE_PROJECT_REPONAME-clean"
      #- rm -rf "$HOME/$CIRCLE_PROJECT_REPONAME-public"/*
      #- docs-generator --input-path "$HOME/$CIRCLE_PROJECT_REPONAME-clean" --output-path "$HOME/$CIRCLE_PROJECT_REPONAME-public" --github-org $CIRCLE_PROJECT_USERNAME --github-repo-name $CIRCLE_PROJECT_REPONAME
      #- cd "$HOME/$CIRCLE_PROJECT_REPONAME-public" && git-add-commit-push --commit-all --branch-name master --message "Auto-generate docs for release $CIRCLE_TAG"

      # If a new release is tagged in GitHub, build the openvpn-admin binaries and upload them to GitHub.
      - build-go-binaries --app-name openvpn-admin --src-path modules/openvpn-admin/src --dest-path bin --ld-flags "-X main.VERSION=$CIRCLE_TAG"
      - upload-github-release-assets bin/*
