# ---------------------------------------------------------------------------------------------------------------------
# REQUIRED PARAMETERS
# These variables are expected to be passed in by the operator when calling this terraform module.
# ---------------------------------------------------------------------------------------------------------------------

variable "name" {
  description = "The name of the server. This will be used to namespace all resources created by this module."
}

variable "backup_bucket_name" {
  description = "The name of the s3 bucket that will be used to backup PKI secrets"
}

variable "request_queue_name" {
  description = "The name of the sqs queue that will be used to receive new certificate requests"
}

variable "revocation_queue_name" {
  description = "The name of the sqs queue that will be used to receive certification revocation requests"
}

variable "kms_key_arn" {
  description = "The Amazon Resource Name (ARN) of the KMS Key that will be used to encrypt/decrypt backup files."
}

variable "ami" {
  description = "The ID of the AMI to run for this server."
}

variable "vpc_id" {
  description = "The id of the VPC where this server should be deployed."
}

variable "subnet_id" {
  description = "The id of the subnet where this server should be deployed."
}

variable "keypair_name" {
  description = "The name of a Key Pair that can be used to SSH to this instance. Leave blank if you don't want to enable Key Pair auth."
}

variable "ca_country" {
  description = "The two-letter country code where your organization is located for the Certificate Authority"
}

variable "ca_state" {
  description = "The state or province name where your organization is located for the Certificate Authority"
}

variable "ca_locality" {
  description = "The locality name (e.g. city or town name) where your organization is located for the Certificate Authority"
}

variable "ca_org" {
  description = "The name of your organization (e.g. Gruntwork) for the Certificate Authority"
}

variable "ca_org_unit" {
  description = "The name of the unit, department, or scope within your organization for the Certificate Authority"
}

variable "ca_email" {
  description = "The e-mail address of the administrator for the Certificate Authority"
}

variable "vpn_subnet" {
  description = "The subnet IP and mask vpn clients will be assigned addresses from. For example, 172.168.1.0 255.255.255.0. This is a non-routed network that only exists between the VPN server and the client. Therefore, it should NOT overlap with VPC addressing, or the client won't be able to access any of the VPC IPs."
}

variable "vpn_routes" {
  description = "Additional routes that will be pushed to the VPN clients and routed over the VPN. Each route should be specified with the format subnet mask. E.g.: 10.1.0.0 255.255.0.0."
  type = "list"
  default = []
}

# ---------------------------------------------------------------------------------------------------------------------
# OPTIONAL PARAMETERS
# Generally, these values won't need to be changed.
# ---------------------------------------------------------------------------------------------------------------------

variable "allow_ssh_from_cidr" {
  description = "A boolean that specifies if this server will allow SSH connections from the list of CIDR blocks specified in var.allow_ssh_from_cidr_list."
  default = false
}

variable "allow_ssh_from_cidr_list" {
  description = "A list of IP address ranges in CIDR format from which SSH access will be permitted. Attempts to access the bastion host from all other IP addresses will be blocked. This is only used if var.allow_ssh_from_cidr is true."
  type = "list"
  default = []
}

variable "allow_ssh_from_security_group" {
  description = "A boolean that specifies if this server will allow SSH connections from the security group specified in var.allow_ssh_from_security_group_id."
  default = false
}

variable "allow_ssh_from_security_group_id" {
  description = "The ID of a security group from which SSH connections will be allowed. Only used if var.allow_ssh_from_security_group is true."
  default = ""
}

variable "backup_bucket_force_destroy" {
  description = "When a terraform destroy is run, should the backup s3 bucket be destroyed even if it contains files. Should only be set to true for testing/development"
  default = false
}

variable "openssl_key_size" {
  description = "The size (in bits) of keys that will be generated by OpenSSL for use in securing the VPN"
  default = "4096"
}

variable "openssl_ca_expiration_days" {
  description = "The number of days the certificate authority (CA) certificate will be valid for"
  default = "3650"
}

variable "openssl_certificate_expiration_days" {
  description = "The number of days the server and client certificates will be valid for"
  default = "3650"
}

variable "instance_type" {
  description = "The type of EC2 instance to run (e.g. t2.micro)"
  default = "t2.micro"
}

variable "tenancy" {
  description = "The tenancy of this server. Must be one of: default, dedicated, or host."
  default = "default"
}

variable "user_data" {
  description = "The User Data script to run on this instance when it is booting."
  default = ""
}

